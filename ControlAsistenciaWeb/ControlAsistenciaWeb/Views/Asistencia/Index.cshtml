@model IEnumerable<dynamic>

@{
    ViewData["Title"] = "Registro de Asistencias";
}

<!-- DataTables CSS -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.3.6/css/buttons.dataTables.min.css">

<h2 class="text-center">Registro de Asistencias</h2>

<div class="table-responsive">
    <table id="asistenciasTable" class="table table-striped table-bordered">
        <thead class="table-dark">
            <tr>
                <th>#</th>
                <th>Fecha</th>
                <th>Empleado</th>           
                <th>Hora Entrada</th>
                <th>Hora Salida</th>
            </tr>
        </thead>
        <tbody>
            @{
                int counter = 1; 
            }

            @foreach (var item in Model)
            {
                    <tr>
                        <td>@counter</td>
                        <td>@item.Fecha.ToString("dd/MM/yyyy")</td>
                        <td>@item.Empleado</td>  @* Corregido *@
                        <td>
                        @if (item.Entrada != null)
                        {
                                  @*   <span class="badge bg-success">@item.Entrada.Hora.ToString("HH:mm")</span> *@
                                    <span class="badge bg-success">@item.Entrada.Hora</span>
                        }
                        else
                        {
                                    <span class="badge bg-warning">No Registrado</span>
                        }
                        </td>
                        <td>
                        @if (item.Salida != null)
                        {
                                  @*   <span class="badge bg-danger">@item.Salida.Hora.ToString("HH:mm")</span>  *@
                                              <span class="badge bg-danger">@item.Salida.Hora</span> @* Corregido *@
                        }
                        else
                        {
                                    <span class="badge bg-warning">No Registrado</span>
                        }
                        </td>
                    </tr>
                counter++;
            }
        </tbody>
    </table>
</div>



<div class="row mb-3">
    <div class="col-md-4">
        <label>Contraseña para desencriptar horas:</label>
        <input type="password" id="decryptPassword" class="form-control" placeholder="Ingrese la contraseña" />
    </div>
    <div class="col-md-2">
        <button id="decryptButton" class="btn btn-primary mt-4">Desencriptar Horas</button>
    </div>
</div>


<div class="row mb-3">
    <div class="col-md-3">
        <label for="horaEntrada">Hora Entrada (HH:mm:ss):</label>
        <input type="time" id="horaEntrada" class="form-control" required />
    </div>
    <div class="col-md-3">
        <label for="horaSalida">Hora Salida (HH:mm:ss):</label>
        <input type="time" id="horaSalida" class="form-control" required />
    </div>
    <div class="col-md-2">
        <button id="compararHoras" class="btn btn-primary mt-4">Comparar Horas</button>
    </div>
</div>





<!-- jQuery y DataTables -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>

<script>
    $(document).ready(function () {

         //para poder Desencriptar las horas de trabajo

         $('#decryptButton').click(function () {
            var password = $('#decryptPassword').val();

            if (!password) {
                alert("Por favor, ingrese la contraseña.");
                return;
            }

            // Obtener todas las horas encriptadas
            var encryptedHours = [];
            $('#asistenciasTable tbody tr').each(function () {
                var entrada = $(this).find('td').eq(3).text().trim();
                var salida = $(this).find('td').eq(4).text().trim();

                encryptedHours.push({
                    entrada: entrada !== "No Registrado" ? entrada : null,
                    salida: salida !== "No Registrado" ? salida : null
                });
            });

            // Enviar contraseña y horas al servidor
            $.ajax({
                type: "POST",
                url: '@Url.Action("DesencriptarHoras", "Asistencia")', // Cambia "TuControlador" por el nombre real
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    password: password,
                    horas: encryptedHours
                }),
                success: function (response) {
                    // Actualizar la tabla con horas desencriptadas
                    $('#asistenciasTable tbody tr').each(function (index) {
                        var entrada = response[index].entrada;
                        var salida = response[index].salida;

                        $(this).find('td').eq(3).html(
                            entrada 
                                ? `<span class="badge bg-success">${entrada}</span>` 
                                : `<span class="badge bg-warning">No Registrado</span>`
                        );
                        $(this).find('td').eq(4).html(
                            salida 
                                ? `<span class="badge bg-danger">${salida}</span>` 
                                : `<span class="badge bg-warning">No Registrado</span>`
                        );
                    });
                },
                error: function (xhr, status, error) {
                    alert(`Error: ${xhr.status} - ${xhr.responseText}`);
                }
            });
        });




      $('#compararHoras').click(function () {
        var horaEstándarEntrada = $('#horaEntrada').val();
        var horaEstándarSalida = $('#horaSalida').val();

        if (!horaEstándarEntrada || !horaEstándarSalida) {
            alert("Por favor, complete ambas horas estándar.");
            return;
        }

        $('#asistenciasTable tbody tr').each(function () {
            var entradaCell = $(this).find('td').eq(3);
            var salidaCell = $(this).find('td').eq(4);

            var entradaHora = entradaCell.text().trim();
            var salidaHora = salidaCell.text().trim();

            // Validar hora de entrada
            if (entradaHora !== "No Registrado") {
                if (entradaHora > horaEstándarEntrada) {
                    // Llegó tarde
                    entradaCell.html(`<span class="badge bg-danger">${entradaHora} (Tarde)</span>`);
                } else {
                    // A tiempo
                    entradaCell.html(`<span class="badge bg-success">${entradaHora}</span>`);
                }
            } else {
                entradaCell.html(`<span class="badge bg-warning">No Registrado</span>`);
            }

            // Validar hora de salida
            if (salidaHora !== "No Registrado") {
                if (salidaHora < horaEstándarSalida) {
                    // Salió temprano
                    salidaCell.html(`<span class="badge bg-danger">${salidaHora} (Temprano)</span>`);
                } else {
                    // Salió a tiempo
                    salidaCell.html(`<span class="badge bg-success">${salidaHora}</span>`);
                }
            } else {
                salidaCell.html(`<span class="badge bg-warning">No Registrado</span>`);
            }
        });
    });








        var table = $('#asistenciasTable').DataTable({
            "paging": true,
            "searching": true,
            "ordering": true,
            "info": true,
            "columnDefs": [{
                "searchable": false,
                "orderable": false,
                "targets": 0
            }],
            "order": [[1, 'desc']], // Ordenar por fecha (columna 1)
            "language": {
                "lengthMenu": "Mostrar _MENU_ registros por página",
                "zeroRecords": "No se encontraron registros",
                "info": "Mostrando página _PAGE_ de _PAGES_",
                "infoEmpty": "No hay registros disponibles",
                "infoFiltered": "(filtrado de _MAX_ registros totales)",
                "search": "Buscar:",
                "paginate": {
                    "next": "Siguiente",
                    "previous": "Anterior"
                }
            }
        });

        // Actualizar contador tras orden o búsqueda
        table.on('order.dt search.dt', function () {
            table.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1;
            });
        }).draw();
    });
</script>
